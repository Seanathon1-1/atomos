# Alternative GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=debug_win32
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug_win32)
  Atomos_config = debug_win32
  ImGui_config = debug_win32
  Balls_config = debug_win32

else ifeq ($(config),debug_x64)
  Atomos_config = debug_x64
  ImGui_config = debug_x64
  Balls_config = debug_x64

else ifeq ($(config),release_win32)
  Atomos_config = release_win32
  ImGui_config = release_win32
  Balls_config = release_win32

else ifeq ($(config),release_x64)
  Atomos_config = release_x64
  ImGui_config = release_x64
  Balls_config = release_x64

else
  $(error "invalid configuration $(config)")
endif

PROJECTS := Atomos ImGui Balls

.PHONY: all clean help $(PROJECTS) Core Demo

all: $(PROJECTS)

Core: Atomos ImGui

Demo: Balls

Atomos:
ifneq (,$(Atomos_config))
	@echo "==== Building Atomos ($(Atomos_config)) ===="
	@${MAKE} --no-print-directory -C Atomos -f Makefile config=$(Atomos_config)
endif

ImGui:
ifneq (,$(ImGui_config))
	@echo "==== Building ImGui ($(ImGui_config)) ===="
	@${MAKE} --no-print-directory -C Atomos/lib/ImGui -f Makefile config=$(ImGui_config)
endif

Balls: Atomos
ifneq (,$(Balls_config))
	@echo "==== Building Balls ($(Balls_config)) ===="
	@${MAKE} --no-print-directory -C Balls -f Makefile config=$(Balls_config)
endif

clean:
	@${MAKE} --no-print-directory -C Atomos -f Makefile clean
	@${MAKE} --no-print-directory -C Atomos/lib/ImGui -f Makefile clean
	@${MAKE} --no-print-directory -C Balls -f Makefile clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug_win32"
	@echo "  debug_x64"
	@echo "  release_win32"
	@echo "  release_x64"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   Atomos"
	@echo "   ImGui"
	@echo "   Balls"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"